name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - uses: actions/checkout@v3

      # Step 2: Install Rust using actions-rs
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # Step 3: Install and verify Dojo Engine
      - name: Install and verify Dojo Engine
        run: |
          # Print current directory and PATH
          pwd
          echo "Initial PATH: $PATH"
          
          # Install Dojo with verbose output
          curl -L https://install.dojoengine.org -o install-dojo.sh
          cat install-dojo.sh  # Inspect the installer
          chmod +x install-dojo.sh
          ./install-dojo.sh --verbose
          
          # Verify Dojo installation
          echo "Checking Dojo installation..."
          ls -la $HOME/.dojo || echo "~/.dojo not found"
          ls -la $HOME/.dojo/bin || echo "~/.dojo/bin not found"
          
          # Add Dojo to PATH and verify
          export PATH="$HOME/.dojo/bin:$PATH"
          echo "Updated PATH: $PATH"
          
          # Check if executables exist
          file $HOME/.dojo/bin/sozo || echo "sozo binary not found"
          file $HOME/.dojo/bin/katana || echo "katana binary not found"
          
          # Try to run sozo directly with full path
          $HOME/.dojo/bin/sozo --version || echo "Failed to run sozo directly"

      # Step 4: Install Scarb
      - name: Install Scarb
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://docs.swmansion.com/scarb/install.sh | sh
          echo "$HOME/.scarb/bin" >> $GITHUB_PATH
          export PATH="$HOME/.scarb/bin:$PATH"

      # Step 5: Build with Sozo (with verbose output)
      - name: Build with Sozo
        run: |
          echo "Current working directory: $(pwd)"
          echo "Current PATH: $PATH"
          echo "Checking sozo location: $(which sozo || echo 'sozo not found')"
          ls -la $HOME/.dojo/bin/
          $HOME/.dojo/bin/sozo --version
          $HOME/.dojo/bin/sozo build --verbose

      # Step 6: Start Katana devnet in the background
      - name: Start Katana Devnet
        run: |
          $HOME/.dojo/bin/katana --dev --dev.no-fee > katana.log 2>&1 &
          sleep 10  # Wait for Katana to start

      # Step 7: Inspect using Sozo
      - name: Inspect with Sozo
        run: |
          $HOME/.dojo/bin/sozo inspect

      # Step 8: Upload Katana logs
      - name: Upload Katana Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: katana-logs
          path: katana.log
